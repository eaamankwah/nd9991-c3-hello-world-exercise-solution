version: 2.1

#jobs:
  # job that creates infrastructure in AWS using cloud formation template and rollback on failure
  #create_infrastructure:
    #docker:
      #- image: amazon/aws-cli
    #steps:
      #- checkout
      #- run:
          #name: Ensure backend infrastructure exist
          #command: |
            #aws cloudformation deploy \
            #--template-file template.yml \
            #--stack-name my-stack \
            #--region us-west-2

#jobs:
  # Exercise: Config and Deployment
  #configure_infrastructure:
    #docker:
      #- image: python:3.7-alpine3.11
    #steps:
      #- checkout
      #- add_ssh_keys:
          #fingerprints: 
            #- "38:f8:c0:41:a0:62:4c:3a:88:9c:5e:14:4b:b3:a6:76"
      #- run:
          #name: "Install dependencies"
          #command: |
            #apk add --update ansible
      #- run:
          #name: "Configure server"
          #command: |
            #ansible-playbook -i inventory main.yml

# job with a simple smoke test for verification of a server


# Exercise: Smoke Testing
# Exercise: Smoke Testing
# Exercise: Smoke Testing

#jobs:
  #smoke_test:
    #docker:
      #- image: alpine:latest
    #steps:
      #- run: apk add --update curl
      #- run:
          #name: smoke test
          #command: |
            #URL="https://blog.udacity.com/"
            # Test if website exists
            #if curl -s --head ${URL} 
            #then
              #return 0
            #else
              #return 1
            #fi
      

# Rollback
commands:
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name prod-${CIRCLE_WORKFLOW_ID:0:7}

jobs:
  # job that creates infrastructure in AWS using cloud formation template and rollback on failure
  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Stack
          command: |
            aws cloudformation deploy \
            --template-file template.yml \
            --stack-name prod-${CIRCLE_WORKFLOW_ID:0:7} \
            --region us-west-2
      - destroy_environment
            

#jobs:
  # Exercise: Smoke Testing
  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run:
          name: Test job
          # Fail the job intentionally to simulate an error.
          command:  return 1
      - destroy_environment  


workflows:
  my_workflow:
    jobs:
      - create_infrastructure
      #- configure_infrastructure
      - smoke_test
